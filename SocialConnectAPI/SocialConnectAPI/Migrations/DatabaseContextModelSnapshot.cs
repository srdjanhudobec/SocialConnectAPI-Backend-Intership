// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialConnectAPI.Repositorys;

#nullable disable

namespace SocialConnectAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SocialConnectAPI.Models.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ObjavaId")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kreatorId")
                        .HasColumnType("int");

                    b.Property<int>("objavaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjavaId");

                    b.HasIndex("kreatorId");

                    b.HasIndex("objavaId");

                    b.ToTable("komentari");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAktivan")
                        .HasColumnType("bit");

                    b.Property<int>("pratioci")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("korisnici");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Lajk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ObjavaId")
                        .HasColumnType("int");

                    b.Property<int>("kreatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjavaId");

                    b.HasIndex("kreatorId");

                    b.ToTable("Lajkovi");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Objava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("KreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isArhivirana")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("KreatorId");

                    b.ToTable("objave");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Pratioci", b =>
                {
                    b.Property<int>("pratiocId")
                        .HasColumnType("int");

                    b.Property<int>("zapracenId")
                        .HasColumnType("int");

                    b.HasKey("pratiocId", "zapracenId");

                    b.HasIndex("zapracenId");

                    b.ToTable("pratioci");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Tag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("objavaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("objavaId");

                    b.ToTable("tagovi");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Komentar", b =>
                {
                    b.HasOne("SocialConnectAPI.Models.Objava", null)
                        .WithMany()
                        .HasForeignKey("ObjavaId");

                    b.HasOne("SocialConnectAPI.Models.Korisnik", "kreator")
                        .WithMany()
                        .HasForeignKey("kreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SocialConnectAPI.Models.Objava", "objava")
                        .WithMany("Komentari")
                        .HasForeignKey("objavaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("kreator");

                    b.Navigation("objava");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Lajk", b =>
                {
                    b.HasOne("SocialConnectAPI.Models.Objava", null)
                        .WithMany("Lajkovi")
                        .HasForeignKey("ObjavaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SocialConnectAPI.Models.Korisnik", "kreator")
                        .WithMany()
                        .HasForeignKey("kreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("kreator");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Objava", b =>
                {
                    b.HasOne("SocialConnectAPI.Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.HasOne("SocialConnectAPI.Models.Korisnik", "kreator")
                        .WithMany()
                        .HasForeignKey("KreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("kreator");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Pratioci", b =>
                {
                    b.HasOne("SocialConnectAPI.Models.Korisnik", "pratioc")
                        .WithMany()
                        .HasForeignKey("pratiocId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SocialConnectAPI.Models.Korisnik", "zapracen")
                        .WithMany()
                        .HasForeignKey("zapracenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("pratioc");

                    b.Navigation("zapracen");
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Tag", b =>
                {
                    b.HasOne("SocialConnectAPI.Models.Objava", null)
                        .WithMany("Tagovi")
                        .HasForeignKey("objavaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialConnectAPI.Models.Objava", b =>
                {
                    b.Navigation("Komentari");

                    b.Navigation("Lajkovi");

                    b.Navigation("Tagovi");
                });
#pragma warning restore 612, 618
        }
    }
}
